{"ast":null,"code":"import _regeneratorRuntime from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rachneet/PycharmProjects/amc_react/src/FileUpload.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Title from './Title';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errors = _useState10[0],\n      setErrors = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      uploadPercentage = _useState12[0],\n      setUploadPercentage = _useState12[1];\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  function hasError(key) {\n    return setErrors.indexOf(key) !== -1;\n  }\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var formData, errors, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              errors = [];\n\n              if (!(formData.fileName === \"\")) {\n                _context.next = 9;\n                break;\n              }\n\n              console.log(formData.fileName);\n              errors.push(\"file\");\n              _context.next = 21;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return axios.post('/api/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n                  setTimeout(function () {\n                    return setUploadPercentage(0);\n                  }, 10000);\n                }\n              });\n\n            case 12:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](9);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 21:\n              setErrors(errors);\n\n              if (!(setErrors.length > 0)) {\n                _context.next = 27;\n                break;\n              }\n\n              console.log(setErrors);\n              return _context.abrupt(\"return\", false);\n\n            case 27:\n              alert(\"Everything good. Upload!\");\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 18]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    method: \"post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group files color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 18\n    }\n  }, \"Upload Your File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success btn-block\",\n    onClick: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }\n  }, \"Upload\"))))))), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/rachneet/PycharmProjects/amc_react/src/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","Form","Col","Container","Row","Button","Title","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","errors","setErrors","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","hasError","key","indexOf","onSubmit","preventDefault","formData","FormData","append","fileName","console","log","push","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","data","filePath","response","status","msg","length","alert","color","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACCV,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBW,IADgB;AAAA,MACVC,OADU;;AAAA,mBAESZ,QAAQ,CAAC,aAAD,CAFjB;AAAA;AAAA,MAEhBa,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAGiBd,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGhBe,YAHgB;AAAA,MAGFC,eAHE;;AAAA,mBAIOhB,QAAQ,CAAC,EAAD,CAJf;AAAA;AAAA,MAIhBiB,OAJgB;AAAA,MAIPC,UAJO;;AAAA,mBAKKlB,QAAQ,CAAC,EAAD,CALb;AAAA;AAAA,MAKhBmB,MALgB;AAAA,MAKRC,SALQ;;AAAA,oBAMyBpB,QAAQ,CAAC,CAAD,CANjC;AAAA;AAAA,MAMhBqB,gBANgB;AAAA,MAMEC,mBANF;;AAQvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBZ,IAAAA,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAZ,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACD,GAHD;;AAKA,WAASC,QAAT,CAAkBC,GAAlB,EAAsB;AACpB,WAAOT,SAAS,CAACU,OAAV,CAAkBD,GAAlB,MAA2B,CAAC,CAAnC;AACD;;AAED,MAAME,QAAQ;AAAA,wEAAG,iBAAMP,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,CAAC,CAACQ,cAAF;AACMC,cAAAA,QAFS,GAEE,IAAIC,QAAJ,EAFF;AAGfD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBxB,IAAxB;AAEIQ,cAAAA,MALW,GAKF,EALE;;AAAA,oBAOVc,QAAQ,CAACG,QAAT,KAAsB,EAPZ;AAAA;AAAA;AAAA;;AAQTC,cAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,QAArB;AACAjB,cAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ;AATS;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAeapC,KAAK,CAACqC,IAAN,CAAW,aAAX,EAA0BP,QAA1B,EAAoC;AAClDQ,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBADyC;AAIlDC,gBAAAA,gBAAgB,EAAE,0BAAAC,aAAa,EAAI;AAC/BrB,kBAAAA,mBAAmB,CACfsB,QAAQ,CACJC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KAAxD,CADI,CADO,CAAnB,CAD+B,CAO/B;;AACAC,kBAAAA,UAAU,CAAC;AAAA,2BAAM3B,mBAAmB,CAAC,CAAD,CAAzB;AAAA,mBAAD,EAA+B,KAA/B,CAAV;AACH;AAbiD,eAApC,CAfb;;AAAA;AAeC4B,cAAAA,GAfD;AAAA,0BA+BwBA,GAAG,CAACC,IA/B5B,EA+BEf,QA/BF,aA+BEA,QA/BF,EA+BYgB,QA/BZ,aA+BYA,QA/BZ;AAiCLpC,cAAAA,eAAe,CAAC;AAACoB,gBAAAA,QAAQ,EAARA,QAAD;AAAWgB,gBAAAA,QAAQ,EAARA;AAAX,eAAD,CAAf;AAEAlC,cAAAA,UAAU,CAAC,eAAD,CAAV;AAnCK;AAAA;;AAAA;AAAA;AAAA;;AAqCL,kBAAI,YAAImC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BpC,gBAAAA,UAAU,CAAC,qCAAD,CAAV;AACH,eAFD,MAEO;AACHA,gBAAAA,UAAU,CAAC,YAAImC,QAAJ,CAAaF,IAAb,CAAkBI,GAAnB,CAAV;AACH;;AAzCI;AA6CbnC,cAAAA,SAAS,CAACD,MAAD,CAAT;;AA7Ca,oBA8CRC,SAAS,CAACoC,MAAV,GAAmB,CA9CX;AAAA;AAAA;AAAA;;AA+CRnB,cAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AA/CQ,+CAgDN,KAhDM;;AAAA;AAkDbqC,cAAAA,KAAK,CAAC,0BAAD,CAAL;;AAlDa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAR1B,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAsDA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAAL,CADL,eAGG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,IAAA,KAAK,EAAE;AAAC2B,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AACA,IAAA,QAAQ,EAAEnC,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAQE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEF,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,2BAAhC;AAA4D,IAAA,OAAO,EAAEU,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,CAFF,CADF,CAFF,CADA,CAHH,CADF,EAkCGhB,YAAY,gBACX;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,YAAY,CAACqB,QAA1C,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAA+B,IAAA,GAAG,EAAE5C,YAAY,CAACqC,QAAjD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADW,GAOT,IAzCN,CADF;AA6CD,CApHD;;AAsHA,eAAe1C,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Title from './Title'\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [errors, setErrors] = useState([])\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  function hasError(key){\r\n    return setErrors.indexOf(key) !== -1;\r\n  }\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    var errors = []\r\n\r\n      if(formData.fileName === \"\"){\r\n          console.log(formData.fileName)\r\n          errors.push(\"file\")\r\n      }\r\n\r\n      else {\r\n\r\n          try {\r\n              const res = await axios.post('/api/upload', formData, {\r\n                  headers: {\r\n                      'Content-Type': 'multipart/form-data'\r\n                  },\r\n                  onUploadProgress: progressEvent => {\r\n                      setUploadPercentage(\r\n                          parseInt(\r\n                              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                          )\r\n                      );\r\n\r\n                      // Clear percentage\r\n                      setTimeout(() => setUploadPercentage(0), 10000);\r\n                  }\r\n              });\r\n\r\n              const {fileName, filePath} = res.data;\r\n\r\n              setUploadedFile({fileName, filePath});\r\n\r\n              setMessage('File Uploaded');\r\n          } catch (err) {\r\n              if (err.response.status === 500) {\r\n                  setMessage('There was a problem with the server');\r\n              } else {\r\n                  setMessage(err.response.data.msg);\r\n              }\r\n          }\r\n      }\r\n\r\n      setErrors(errors);\r\n       if (setErrors.length > 0) {\r\n           console.log(setErrors)\r\n      return false;\r\n    } else {\r\n      alert(\"Everything good. Upload!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n           <div><h1><Title /></h1></div>\r\n\r\n         <div className=\"container\">\r\n         <div className=\"row\">\r\n\r\n           <div className=\"col-md-6 center\">\r\n             <Form method=\"post\">\r\n\r\n               <div className=\"form-group files color\">\r\n\r\n                 <label style={{color: \"white\"}}>\r\n                     Upload Your File\r\n                 </label>\r\n                 <input type=\"file\" className=\"form-control\"\r\n                 onChange={onChange}/>\r\n\r\n                 <Progress percentage={uploadPercentage} />\r\n\r\n                   <button type=\"button\" className=\"btn btn-success btn-block\" onClick={onSubmit}>\r\n                       Upload\r\n                   </button>\r\n\r\n\r\n               </div>\r\n\r\n             </Form>\r\n\r\n\r\n           </div>\r\n         </div>\r\n       </div>\r\n       </Container>\r\n      {uploadedFile ? (\r\n        <div className='row mt-5'>\r\n          <div className='col-md-6 m-auto'>\r\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}