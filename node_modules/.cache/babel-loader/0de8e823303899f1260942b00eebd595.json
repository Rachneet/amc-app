{"ast":null,"code":"import _classCallCheck from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rachneet/PycharmProjects/amc_react/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Title from './Title'; // import os from 'os';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n\n    _this.onFileChange = function (event) {\n      // Update the state\n      _this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    _this.onFileUpload = function () {\n      // Create an object of formData\n      var formData = new FormData(); // Update the formData object\n\n      formData.append(\"myFile\", _this.state.selectedFile, _this.state.selectedFile.name); // Details of the uploaded file\n\n      console.log(_this.state.selectedFile); // Request made to the backend api\n      // Send formData object\n\n      axios.post(\"http://127.0.0.1:5000/api/uploadfile\", formData);\n    };\n\n    _this.fileData = function () {\n      if (_this.state.selectedFile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, \"File Name: \", _this.state.selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }, \"File Type: \", _this.state.selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        }, \"Last Modified:\", \" \", _this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"GeeksforGeeks\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"File Upload using React!\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onFileUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, \"Upload!\")), this.fileData());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //check for possible fixes","map":{"version":3,"sources":["/home/rachneet/PycharmProjects/amc_react/src/App.js"],"names":["React","Component","axios","Form","Col","Container","Row","Button","Title","App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;IAEMC,G;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAEN;AACAC,MAAAA,YAAY,EAAE;AAHR,K;;UAORC,Y,GAAe,UAAAC,KAAK,EAAI;AAEtB;AACA,YAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAED,K;;UAGDC,Y,GAAe,YAAM;AAEnB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHmB,CAKnB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,MAAKV,KAAL,CAAWC,YAFb,EAGE,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EANmB,CAYnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKb,KAAL,CAAWC,YAAvB,EAbmB,CAenB;AACA;;AACAT,MAAAA,KAAK,CAACsB,IAAN,CAAW,sCAAX,EAAmDN,QAAnD;AACD,K;;UAIDO,Q,GAAW,YAAM;AAEf,UAAI,MAAKf,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKX,KAAL,CAAWC,YAAX,CAAwBe,IAAvC,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACiB,GADjB,EAEG,MAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,gBAAxB,CAAyCC,YAAzC,EAFH,CAJF,CADF;AAWD,OAbD,MAaO;AACL,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CADF;AAMD;AACF,K;;;;;;;6BAEQ;AAEP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKhB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAPJ,EAaG,KAAKQ,QAAL,EAbH,CADF;AAiBD;;;;EAnFaxB,S;;AAsFhB,eAAeQ,GAAf,C,CAGF","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Title from './Title'\n// import os from 'os';\n\nclass App extends Component {\n\n    state = {\n\n      // Initially, no file is selected\n      selectedFile: null\n    };\n\n    // On file select (from the pop up)\n    onFileChange = event => {\n\n      // Update the state\n      this.setState({ selectedFile: event.target.files[0] });\n\n    };\n\n    // On file upload (click the upload button)\n    onFileUpload = () => {\n\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\n        \"myFile\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n\n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"http://127.0.0.1:5000/api/uploadfile\", formData);\n    };\n\n    // File content to be displayed after\n    // file upload is complete\n    fileData = () => {\n\n      if (this.state.selectedFile) {\n\n        return (\n          <div>\n            <h2>File Details:</h2>\n            <p>File Name: {this.state.selectedFile.name}</p>\n            <p>File Type: {this.state.selectedFile.type}</p>\n            <p>\n              Last Modified:{\" \"}\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <br />\n            <h4>Choose before Pressing the Upload button</h4>\n          </div>\n        );\n      }\n    };\n\n    render() {\n\n      return (\n        <div>\n            <h1>\n              GeeksforGeeks\n            </h1>\n            <h3>\n              File Upload using React!\n            </h3>\n            <div>\n                <input type=\"file\" onChange={this.onFileChange} />\n                <button onClick={this.onFileUpload}>\n                  Upload!\n                </button>\n            </div>\n          {this.fileData()}\n        </div>\n      );\n    }\n  }\n\n  export default App;\n\n\n//check for possible fixes"]},"metadata":{},"sourceType":"module"}