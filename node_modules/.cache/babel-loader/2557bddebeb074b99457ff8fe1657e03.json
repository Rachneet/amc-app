{"ast":null,"code":"import _classCallCheck from\"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import Form from'react-bootstrap/Form';import Col from'react-bootstrap/Col';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Button from'react-bootstrap/Button';import'bootstrap/dist/css/bootstrap.css';// import os from 'os';\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.handleChange=function(event){var value=event.target.value;var name=event.target.name;var formData=_this.state.formData;formData[name]=value;_this.setState({formData});};_this.handlePredictClick=function(event){event.preventDefault();var errors=[];// var host=\"\";\n// var port=\"\";\nvar formData=_this.state.formData;// text\nif(formData.text===\"\"){errors.push(\"text\");}else{_this.setState({isLoading:true});fetch('/api/prediction/',{headers:{'Accept':'application/json','Content-Type':'application/json'},method:'POST',body:JSON.stringify(formData)}).then(function(response){return response.json();}).then(function(response){_this.setState({result:response.result,isLoading:false});});}_this.setState({errors:errors});if(errors.length>0){return false;}else{alert(\"Everything good. Submit text!\");}};_this.handleCancelClick=function(event){var formData=_this.state.formData;formData.text=\"\";_this.setState({formData,result:\"\"});};_this.state={isLoading:false,formData:{text:\"\"},result:\"\",errors:[]};return _this;}_createClass(App,[{key:\"hasError\",value:function hasError(key){return this.state.errors.indexOf(key)!==-1;}},{key:\"render\",value:function render(){var isLoading=this.state.isLoading;var formData=this.state.formData;var result=this.state.result;return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},\"Gender Predictor\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col},/*#__PURE__*/React.createElement(Form.Label,null,\"Text\"),/*#__PURE__*/React.createElement(Form.Control,{className:this.hasError(\"text\")?\"form-control is-invalid\":\"form-control\",type:\"text\",placeholder:\"Enter text\",name:\"text\",value:formData.text,as:\"textarea\",rows:\"4\",onChange:this.handleChange}))),/*#__PURE__*/React.createElement(\"div\",{className:this.hasError(\"text\")?\"inline-errormsg\":\"hidden\"},\"Please enter a text\"),/*#__PURE__*/React.createElement(Row,{className:\"pred-button\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{size:\"sm\",block:true,variant:\"success\",disabled:isLoading,onClick:!isLoading?this.handlePredictClick:null},isLoading?'Making prediction':'Predict')),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{size:\"sm\",block:true,variant:\"danger\",disabled:isLoading,onClick:this.handleCancelClick},\"Reset prediction\"))),result===\"\"?null:/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"result-container\"},/*#__PURE__*/React.createElement(\"h3\",{id:\"result\"},result))))));}}]);return App;}(Component);export default App;//check for possible fixes","map":{"version":3,"sources":["/home/rachneet/PycharmProjects/amc_react/src/App.js"],"names":["React","Component","Form","Col","Container","Row","Button","App","props","handleChange","event","value","target","name","formData","state","setState","handlePredictClick","preventDefault","errors","text","push","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","result","length","alert","handleCancelClick","key","indexOf","hasError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import os from 'os';\n\nclass App extends Component {\n\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        text:\"\"\n      },\n      result: \"\",\n      errors: []\n    };\n  }\n\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  handlePredictClick = (event) => {\n     event.preventDefault();\n     var errors = [];\n      // var host=\"\";\n      // var port=\"\";\n    const formData = this.state.formData;\n\n     // text\n    if (formData.text === \"\") {\n      errors.push(\"text\");\n    }\n    else {\n      this.setState({isLoading: true});\n\n      fetch('/api/prediction/',\n          {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(formData)\n          })\n          .then(response => response.json())\n          .then(response => {\n            this.setState({\n              result: response.result,\n              isLoading: false\n            });\n          });\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (errors.length > 0) {\n      return false;\n    } else {\n      alert(\"Everything good. Submit text!\");\n    }\n  }\n\n  handleCancelClick = (event) => {\n      const formData = this.state.formData;\n      formData.text = \"\"\n    this.setState({formData, result: \"\"});\n  }\n\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    return (\n     <Container>\n        <div>\n          <h1 className=\"title\">Gender Predictor</h1>\n        </div>\n        <div>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Text</Form.Label>\n                <Form.Control\n                    className={\n                this.hasError(\"text\")\n                ? \"form-control is-invalid\"\n                : \"form-control\"\n            }\n\n                  type=\"text\"\n                  placeholder=\"Enter text\"\n                  name=\"text\"\n                  value={formData.text}\n                  as=\"textarea\"\n                  rows=\"4\"\n                  onChange={this.handleChange} />\n\n              </Form.Group>\n            </Form.Row>\n\n             <div\n            className={\n              this.hasError(\"text\") ? \"inline-errormsg\" : \"hidden\"\n            }\n          >\n            Please enter a text\n          </div>\n\n\n            <Row className={\"pred-button\"}>\n              <Col >\n                <Button\n                    size={\"sm\"}\n                  block\n                  variant=\"success\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.handlePredictClick : null}>\n                  { isLoading ? 'Making prediction' : 'Predict' }\n                </Button>\n              </Col>\n\n              <Col >\n                <Button size={\"sm\"}\n                  block\n                  variant=\"danger\"\n                  disabled={isLoading}\n                  onClick={this.handleCancelClick}>\n                  Reset prediction\n                </Button>\n              </Col>\n            </Row>\n\n             {result === \"\" ? null :\n            (<Row>\n              <Col className=\"result-container\">\n                <h3 id=\"result\">{result}</h3>\n              </Col>\n            </Row>)\n\n          }\n\n          </Form>\n\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n\n//check for possible fixes"]},"metadata":{},"sourceType":"module"}