{"ast":null,"code":"import _slicedToArray from\"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import'bootstrap/dist/css/bootstrap.css';import Button from'react-bootstrap/Button';import Alert from'react-bootstrap/Alert';var Message=function Message(_ref){var msg=_ref.msg;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];if(show){return/*#__PURE__*/React.createElement(Alert,{variant:\"warning\",onClose:function onClose(){return setShow(false);},dismissible:true},msg);}return/*#__PURE__*/React.createElement(Button,{className:\"alert-button\",onClick:function onClick(){return setShow(true);}},\"Show Alert\");};export default Message;","map":{"version":3,"sources":["/home/rachneet/PycharmProjects/amc_react/src/Message.js"],"names":["React","useState","Button","Alert","Message","msg","show","setShow"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,MAAO,WAAP,CACA,MAAO,kCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAa,IAAVC,CAAAA,GAAU,MAAVA,GAAU,eACHJ,QAAQ,CAAC,IAAD,CADL,wCACpBK,IADoB,eACdC,OADc,eAG3B,GAAID,IAAJ,CAAU,CACR,mBACE,oBAAC,KAAD,EAAO,OAAO,CAAC,SAAf,CAAyB,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAAC,KAAD,CAAb,EAAlC,CAAwD,WAAW,KAAnE,EACKF,GADL,CADF,CAKD,CACD,mBAAO,oBAAC,MAAD,EAAQ,SAAS,CAAE,cAAnB,CAAmC,OAAO,CAAE,yBAAME,CAAAA,OAAO,CAAC,IAAD,CAAb,EAA5C,eAAP,CACD,CAXD,CAkBA,cAAeH,CAAAA,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\n\r\nconst Message = ({ msg }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible>\r\n          {msg}\r\n      </Alert>\r\n    );\r\n  }\r\n  return <Button className={\"alert-button\"} onClick={() => setShow(true)}>Show Alert</Button>;\r\n}\r\n\r\n\r\nMessage.propTypes = {\r\n  msg: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}