{"ast":null,"code":"import _regeneratorRuntime from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/rachneet/PycharmProjects/amc_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rachneet/PycharmProjects/amc_react/src/FileUpload.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Title from './Title';\nimport schema from './schema';\nimport Table from './Table';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose .npz File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uploadPercentage = _useState10[0],\n      setUploadPercentage = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      result = _useState12[0],\n      setResult = _useState12[1];\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var result, formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              result = {};\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post('/api/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n                  setTimeout(function () {\n                    return setUploadPercentage(0);\n                  }, 10000);\n                }\n              });\n\n            case 7:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setResult(res.data);\n              console.log(res.data);\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](4);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 15]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var Test = function Test(_ref2) {\n    var result = _ref2.result;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, result.map(function (res) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"results\",\n        key: res.Modulation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, res.Modulation);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    method: \"post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group files color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }\n  }, \"Upload Your File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success btn-block\",\n    onClick: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 20\n    }\n  }, \"Upload\"), message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 31\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    headers: Object.keys(schema),\n    rows: result,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })))))))), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/rachneet/PycharmProjects/amc_react/src/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","Form","Col","Container","Row","Button","Title","schema","Table","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","result","setResult","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","data","fileName","filePath","console","log","response","status","msg","Test","map","Modulation","color","Object","keys","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Title from './Title'\r\nimport schema from './schema';\r\nimport Table from './Table';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose .npz File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [result, setResult] = useState([]);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    let result = {};\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n      try {\r\n          const res = await axios.post('/api/upload', formData, {\r\n              headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n              },\r\n              onUploadProgress: progressEvent => {\r\n                  setUploadPercentage(\r\n                      parseInt(\r\n                          Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                      )\r\n                  );\r\n\r\n                  // Clear percentage\r\n                  setTimeout(() => setUploadPercentage(0), 10000);\r\n              }\r\n          });\r\n\r\n          const {fileName, filePath} = res.data;\r\n          setResult(res.data);\r\n          console.log(res.data);\r\n\r\n          setUploadedFile({fileName, filePath});\r\n\r\n          setMessage('File Uploaded');\r\n      } catch (err) {\r\n          if (err.response.status === 500) {\r\n              setMessage('There was a problem with the server');\r\n          } else {\r\n              setMessage(err.response.data.msg);\r\n          }\r\n      }\r\n\r\n  };\r\n\r\n  const Test = ({result}) => (\r\n  <>\r\n    {result.map(res => (\r\n      <div className=\"results\" key={res.Modulation}>{res.Modulation}</div>\r\n    ))}\r\n  </>\r\n    );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n           <div><h1><Title /></h1></div>\r\n\r\n         <div className=\"container\">\r\n         <div className=\"row\">\r\n\r\n           <div className=\"col-md-6 center\">\r\n             <Form method=\"post\">\r\n\r\n               <div className=\"form-group files color\">\r\n\r\n                 <label style={{color: \"white\"}}>\r\n                     Upload Your File\r\n                 </label>\r\n                 <input type=\"file\" className=\"form-control\"\r\n                 onChange={onChange}/>\r\n\r\n                 <Progress percentage={uploadPercentage} />\r\n\r\n                   <button type=\"button\" className=\"btn btn-success btn-block\" onClick={onSubmit}>\r\n                       Upload\r\n                   </button>\r\n\r\n                   {message ? <Message msg={message} /> : null}\r\n\r\n               </div>\r\n\r\n             </Form>\r\n\r\n    {/*            {result.map(res => (*/}\r\n    {/*  <div className=\"results\" key={res.Modulation}>{res.Modulation}</div>*/}\r\n    {/*))}*/}\r\n\r\n     {/*{ result.map((item, key) =>*/}\r\n     {/*   <li key={item.Modulation}>{item.Modulation}</li>*/}\r\n     {/* )}*/}\r\n\r\n     <div className=\"container p-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Table headers={Object.keys(schema)} rows={result} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n           </div>\r\n         </div>\r\n       </div>\r\n       </Container>\r\n      {uploadedFile ? (\r\n        <div className='row mt-5'>\r\n          <div className='col-md-6 m-auto'>\r\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}